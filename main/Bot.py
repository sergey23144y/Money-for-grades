from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.types import InputFile
import requests

from ClassUser import User

# –¢–æ–∫–µ–Ω –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
TOKEN_AIP = "6281107032:AAF5kZPJCDXCu4UjoLS5quYtiI8LM5jw56Y"

# /help
HELP_COMMADS = """
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥
"""

url = ['https://admin.sokratapp.ru/api/api-token-auth/',"https://admin.sokratapp.ru/api/user_me"]

# –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Bot
bot = Bot(TOKEN_AIP)
storage = MemoryStorage()
# –î–∏—Å–∫—Ä–∏–ø—Ç–æ—Ä
dp = Dispatcher(bot, storage=storage)

id_me = 1073170752

new_user = False

id_user = ''
user_username = ''

email = ''
phon = ''
score = 0


async def on_start(_):
    print("–í—Å–µ –û–ö!")


async def check_email(email):
    url = 'https://admin.sokratapp.ru/api/users/check_email/'

    data = {
        "email": email
    }

    r = requests.get(url=url, data=data)

    try:
        r.raise_for_status()
        return True
    except:
        return False


async def menu(message: types.Message):
    global email, phon, score

    keyboard = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–∞", callback_data="add")
    button2 = types.InlineKeyboardButton(text="–û–Ω–ª–∞–π–Ω –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ", callback_data="entrance")
    keyboard.row(button1)
    keyboard.row(button2)

    await message.answer(
        f"–í–∞—à–∞ –ø–æ—á—Ç–∞: {email}  \n–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω:  {phon} \n\n "
        f"–®–∫–æ–ª—å–Ω–∏–∫: /start \n–î–µ–Ω—å–≥–∏ –∑–∞ –æ—Ü–µ–Ω–∫–∏:   {score}"
        f"\n\n ‚Ü™Ô∏è –ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∞: https://t.me/Kalinenocbot",
        reply_markup=keyboard)


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    global id_user, user_username

    id_user = message.from_user.id
    user_username = message.from_user.username

    photo = InputFile("image/start.jpg")
    nameuser = message.from_user.username
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text="–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ", callback_data="acquaintance1"))
    await bot.send_photo(chat_id=message.chat.id, photo="https://downloader.disk.yandex.ru/preview/0ecb4e3ac44ed45551f4dddeede596a2ac1ff73d8e8dede6cb05d4061cef7519/641b2f71/YLl_0Fu4csCERoyCuarUVt4sDjQKomanFhLx_E_BiQnQzY6pc93X19kYCvGDYVNjsRZMHOc6zYCdIgqliU5JOg%3D%3D?uid=0&filename=–°—Ç–∞—Ä—Ç–æ–≤–∞—è%20–∫–∞—Ä—Ç–∏–Ω–∫–∞%20–ø–æ—Å–ª–µ%20–∑–∞–ø—É—Å–∫–∞.png&disposition=inline&hash=&limit=0&content_type=image%2Fpng&owner_uid=0&tknv=v2&size=1855x947",
                         caption="–ü—Ä–∏–≤–µ—Ç,@" + nameuser + "\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É '–î–µ–Ω—å–≥–∏ –∑–∞ "
                                                         "–æ—Ü–µ–Ω–∫–∏' –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ Sokrat!\n\n –î–ª—è —á–µ–≥–æ –Ω—É–∂–Ω–∞ —ç—Ç–∞ "
                                                         "–ø—Ä–æ–≥—Ä–∞–º–º–∞?\n\n 1Ô∏è‚É£  –ú—ã —Ö–æ—Ç–∏–º –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–±—è –∏ –ø–æ–∑–≤–æ–ª–∏—Ç—å –≤ "
                                                         "–±—É–¥—É—â–µ–º —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏\n2Ô∏è‚É£  " +
                                 "–ê –µ—â–µ —Ö–æ—Ç–∏–º —Å—Ç–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–±—è –ø–æ–ª—É—á–∞—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ —Ö–æ—Ä–æ—à–∏—Ö –æ—Ü–µ–Ω–æ–∫, —Ç–µ–º —Å–∞–º—ã–º "
                                 "—É–ª—É—á—à–∏—Ç—å —Ç–≤–æ—é —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å –≤ —à–∫–æ–ª–µ!\n3Ô∏è‚É£  –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–º–∏ "
                                 "–¥–Ω–µ–≤–Ω–∏–∫–∞–º–∏.\n4Ô∏è‚É£  –û–Ω–ª–∞–π–Ω - –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –ª—É—á—à–∏–µ –í–£–ó—ã –∏ –°–°–£–ó—ã –†–æ—Å—Å–∏–∏ \n\nüë§  "
                                 "—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º—ã",
                         reply_markup=keyboard)

@dp.message_handler(commands=['id'])
async def id_meneger(message: types.Message):
    global id_me
    print(message.from_user.id)
    await bot.send_message(id_me,f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username}, –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –µ–≥–æ id:{message.from_user.id}')

@dp.callback_query_handler(text="acquaintance1")
async def acquaintance1(call: types.CallbackQuery):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text="–î–∞–ª–µ–µ 1 –∏–∑ 4", callback_data="acquaintance2"))
    await bot.send_photo(chat_id=call.message.chat.id,
                         photo="https://downloader.disk.yandex.ru/preview/708da2a1ba2954484472febd4d67d676fff3265c67cc33b7763359a40c54d7b7/641b2f71/aav889LViY80SFUJZROaEjgDvA_RgSmArNa4MWmSMaCDjBzheks2RgabpYMt1IWnDWFHGuiykGvN0iSzLZcCaQ%3D%3D?uid=0&filename=–ö–∞—Ä—Ç–∏–Ω–∫–∞%201.png&disposition=inline&hash=&limit=0&content_type=image%2Fpng&owner_uid=0&tknv=v2&size=1855x947",
                         reply_markup=keyboard)


@dp.callback_query_handler(text="acquaintance2")
async def acquaintance2(call: types.CallbackQuery):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text="–î–∞–ª–µ–µ 2 –∏–∑ 4", callback_data="acquaintance3"))
    await bot.send_photo(chat_id=call.message.chat.id,
                         photo="https://downloader.disk.yandex.ru/preview/675beca8b0c73621c8bb93ad309a2bc392fce936bf2269202c0cbaa638992921/641b2f71/bnKFXL36r_9d3cmMsF811DgDvA_RgSmArNa4MWmSMaBqXNsSKkLemGiXltOTt2XxrP3QnBfkefLtrVZrGDsYSA%3D%3D?uid=0&filename=–ö–∞—Ä—Ç–∏–Ω–∫–∞%202.png&disposition=inline&hash=&limit=0&content_type=image%2Fpng&owner_uid=0&tknv=v2&size=1855x947",
                         reply_markup=keyboard)


@dp.callback_query_handler(text="acquaintance3")
async def acquaintance3(call: types.CallbackQuery):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text="–î–∞–ª–µ–µ 3 –∏–∑ 4", callback_data="acquaintance4"))
    await bot.send_photo(chat_id=call.message.chat.id,
                         photo="https://downloader.disk.yandex.ru/preview/e0ccd104f293af9bb09f7244077d63dcca5d13b16bc6423c57b340b2569a0873/641b2f71/Gvr4pk1H6sUpkuCxyJBbSxQTsnBTv7czpn4fvlwOl86aUylQQgWBrMFcFBnGDFBOl68-D4SgN0TZqx5DlAWBTQ%3D%3D?uid=0&filename=–ö–∞—Ä—Ç–∏–Ω–∫–∞%203.png&disposition=inline&hash=&limit=0&content_type=image%2Fpng&owner_uid=0&tknv=v2&size=1855x947",
                         reply_markup=keyboard)


@dp.callback_query_handler(text="acquaintance4")
async def acquaintance3(call: types.CallbackQuery):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text="–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ", callback_data="connect_program"))
    await bot.send_photo(chat_id=call.message.chat.id,
                         photo="https://downloader.disk.yandex.ru/preview/e9599f3bb92d46099f03878960e455d8f839b24b3201b7e08faaa04aab2247e0/641b2f71/UHyX3SC38i03tcHZeugg2zgDvA_RgSmArNa4MWmSMaAju5NW2rzj6hCzx5XNaPzYjzPrupLrYk3rMo_85KYgkQ%3D%3D?uid=0&filename=–ö–∞—Ä—Ç–∏–Ω–∫–∞%204.png&disposition=inline&hash=&limit=0&content_type=image%2Fpng&owner_uid=0&tknv=v2&size=1855x947",
                         reply_markup=keyboard)


@dp.callback_query_handler(text="connect_program")
async def connect(call: types.CallbackQuery):
    await call.message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—É, –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–µ—Å—Ç—Ä–∞—Ü–∏–∏/–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.")
    await User.user_email.set()

@dp.message_handler(state=User.user_email)
async def registr_1(message: types.Message, state: FSMContext):
    mail = message.text
    await state.update_data(user_email=mail)

    if await check_email(mail):
        await message.answer("–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω!–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å")
        await User.user_password.set()
    else:
        await message.answer("–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.\n–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–µ—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–∂–∞–ª—É–π—Å—Ç–∞")

@dp.message_handler(state=User.user_password)
async def password(message: types.Message, state: FSMContext):
    global url
    password = message.text
    await state.update_data(user_password=password)
    data = await state.get_data()
    email = data.get('user_email')

    data_auto= {
        "username": f"{email}",
        "password": f"{password}"
    }
    print(data_auto)
    r_admin = requests.post(url[0],data=data)
    r_admin_json = r_admin.json()

    await message.answer(r_admin_json['token'])
    await menu(message=message)



@dp.message_handler(state=User.user_phon)
async def registr_2(message: types.Message, state: FSMContext):
    phon = message.text
    await state.update_data(user_phon=phon)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å")
    await User.user_password.set()




@dp.callback_query_handler(text="menu")
async def menu_button(call: types.CallbackQuery):
    await menu(message=call.message)


@dp.callback_query_handler(text="add")
async def add(call: types.CallbackQuery):
    keyboard = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton(text="–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", callback_data="Petersburg_diary")
    keyboard.add(button1)
    await call.message.answer("–í—ã–±–µ—Ä–µ—Ç–µ —ç–ª–µ–∫—Ç—Ä–Ω–æ–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫:", reply_markup=keyboard)

@dp.callback_query_handler(text="Petersburg_diary")
async def Petersburg_diary(call: types.CallbackQuery,state: FSMContext):
    keyboard = types.InlineKeyboardMarkup()
    button3 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="add")
    keyboard.row(button3)
    await call.message.answer("–í–≤–µ–¥–∏—Ç–µ –§–∞–º–∏–ª–∏—é –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ —É—á–µ–Ω–∏–∫–∞", reply_markup=keyboard)
    await User.user_name.set()


@dp.message_handler(state=User.user_name)
async  def coonect_diary(message: types.Message,state: FSMContext):
    keyboard = types.InlineKeyboardMarkup()
    button3 = types.InlineKeyboardButton(text="–í –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="menu")
    keyboard.row(button3)
    await message.answer("‚úÖ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω", reply_markup=keyboard)
    await state.finish()

@dp.callback_query_handler(text="entrance")
async def entrance(call: types.CallbackQuery):
    keyboard = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton(text="–í—ã–±—Ä–∞—Ç—å –í–£–ó", callback_data="UNIVERSITY")
    button2 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="menu")
    keyboard.add(button1,button2)
    await call.message.answer("Serega_4, –ø–æ—Å—Ç—É–ø–∏—Ç–µ –≤ –æ–¥–∏–Ω –∏–∑ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–≤ —Å–æ —Å–∫–∏–¥–∫–æ–π –æ—Ç Sokrat.\n\n"
                              "Sokrat - —ç—Ç–æ:\n- –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è\n- –ü–æ–¥–∞—á–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –æ–Ω–ª–∞–π–Ω\n"
                              "- –ü–æ–¥–±–æ—Ä –í–£–ó–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ\n- –í—ã–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è\n- –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –±–µ–∑ –ï–ì–≠*\n\n"
                              "*–î–µ–π—Å—Ç–≤—É–µ—Ç –Ω–µ –Ω–∞ –≤—Å–µ —É—á–µ–±–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è - –ø–∞—Ä—Ç–Ω–µ—Ä—ã Sokrat", reply_markup=keyboard)


@dp.callback_query_handler(text="UNIVERSITY")
async def UNIVERSITY(call: types.CallbackQuery):
    keyboard = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton(text="–£–Ω–µ–≤–µ—Ä 1", callback_data="–£–Ω–µ–≤–µ—Ä 1")
    button2 = types.InlineKeyboardButton(text="–£–Ω–µ–≤–µ—Ä 2", callback_data="–£–Ω–µ–≤–µ—Ä 2")
    button3 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="entrance")
    keyboard.row(button1)
    keyboard.row(button2)
    keyboard.row(button3)

    await call.message.answer("–í—ã–±–µ—Ä–µ—Ç–µ –æ–¥–∏–Ω –∏–∑ —É—á–µ–±–Ω—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏–π:", reply_markup=keyboard)


@dp.callback_query_handler(text="–£–Ω–µ–≤–µ—Ä 1")
async def UNIVERSITY_1(call: types.CallbackQuery):

    global id_user, user_username

    keyboard = types.InlineKeyboardMarkup()
    button3 = types.InlineKeyboardButton(text="–í –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="menu")
    keyboard.row(button3)
    await call.message.answer("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.\n–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è", reply_markup=keyboard)
    await bot.send_message(id_me,f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_username},–æ—Ç–ø—Ä–∞–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ 1 –£–Ω–µ–≤–µ—Ä\n –µ–≥–æ id:{id_user}')

@dp.callback_query_handler(text="–£–Ω–µ–≤–µ—Ä 2")
async def UNIVERSITY_1(call: types.CallbackQuery):
        global id_user, user_username

        keyboard = types.InlineKeyboardMarkup()
        button3 = types.InlineKeyboardButton(text="–í –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="menu")
        keyboard.row(button3)
        await call.message.answer("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.\n–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è",
                                  reply_markup=keyboard)
        await bot.send_message(id_me,
                               f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_username},–æ—Ç–ø—Ä–∞–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ 2 –£–Ω–µ–≤–µ—Ä\n –µ–≥–æ id:{id_user}')

if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_start, skip_updates=True)
